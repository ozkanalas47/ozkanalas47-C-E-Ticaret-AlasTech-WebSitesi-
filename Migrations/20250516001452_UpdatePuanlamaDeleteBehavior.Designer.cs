// <auto-generated />
using System;
using AlasTech.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlasTech.Migrations
{
    [DbContext(typeof(AlasTechContext))]
    [Migration("20250516001452_UpdatePuanlamaDeleteBehavior")]
    partial class UpdatePuanlamaDeleteBehavior
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlasTech.Models.Varliklar.Favori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("Favoriler");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Karsilastirma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("Karsilastirmalar");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UstKategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UstKategoriId");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            Adi = "Giyim"
                        });
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Eposta")
                        .IsUnique();

                    b.HasIndex("KullaniciAdi")
                        .IsUnique();

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdSoyad = "Admin Kullanıcı",
                            Eposta = "admin@alastech.com",
                            KullaniciAdi = "admin",
                            Rol = "Yonetici",
                            Sifre = "admin123"
                        },
                        new
                        {
                            Id = 2,
                            AdSoyad = "Satıcı Bir",
                            Eposta = "satici1@alastech.com",
                            KullaniciAdi = "satici1",
                            Rol = "Satici",
                            Sifre = "satici123"
                        },
                        new
                        {
                            Id = 3,
                            AdSoyad = "Müşteri Bir",
                            Eposta = "musteri1@alastech.com",
                            KullaniciAdi = "musteri1",
                            Rol = "Musteri",
                            Sifre = "musteri123"
                        });
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Puanlama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("Yildiz")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId", "KullaniciId")
                        .IsUnique();

                    b.ToTable("Puanlamalar");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SaticiProfili", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("MagazaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId")
                        .IsUnique();

                    b.ToTable("SaticiProfilleri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adres = "İstanbul, Türkiye",
                            KullaniciId = 2,
                            MagazaAdi = "Birinci Mağaza",
                            Telefon = "555-123-4567"
                        });
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SepetKalemi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("SepetKalemleri");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Toplam")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SiparisKalemi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.ToTable("SiparisKalemleri");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("ResimUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SaticiProfilId")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("SaticiProfilId");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Son model akıllı telefon, 128GB depolama",
                            Ad = "Akıllı Telefon",
                            Fiyat = 999.99m,
                            KategoriId = 1,
                            ResimUrl = "/resimler/urunler/telefon.jpg",
                            SaticiProfilId = 1,
                            Stok = 50
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Pamuklu tişört, M beden",
                            Ad = "Tişört",
                            Fiyat = 29.99m,
                            KategoriId = 2,
                            ResimUrl = "/resimler/urunler/tisort.jpg",
                            SaticiProfilId = 1,
                            Stok = 100
                        });
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Favori", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithMany("Favoriler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.Urun", "Urun")
                        .WithMany("Favoriler")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Karsilastirma", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithMany("Karsilastirmalar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.Urun", "Urun")
                        .WithMany("Karsilastirmalar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Kategori", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kategori", "UstKategori")
                        .WithMany()
                        .HasForeignKey("UstKategoriId");

                    b.Navigation("UstKategori");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Puanlama", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.Urun", "Urun")
                        .WithMany("Puanlamalar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SaticiProfili", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithOne("SaticiProfili")
                        .HasForeignKey("AlasTech.Models.Varliklar.SaticiProfili", "KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SepetKalemi", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.Urun", "Urun")
                        .WithMany("SepetKalemleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Siparis", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithMany("Siparisler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SiparisKalemi", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Siparis", "Siparis")
                        .WithMany("SiparisKalemleri")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.Urun", "Urun")
                        .WithMany("SiparisKalemleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Urun", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.SaticiProfili", "SaticiProfili")
                        .WithMany("Urunler")
                        .HasForeignKey("SaticiProfilId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("SaticiProfili");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Yorum", b =>
                {
                    b.HasOne("AlasTech.Models.Varliklar.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlasTech.Models.Varliklar.Urun", "Urun")
                        .WithMany("Yorumlar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Kullanici", b =>
                {
                    b.Navigation("Favoriler");

                    b.Navigation("Karsilastirmalar");

                    b.Navigation("SaticiProfili");

                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.SaticiProfili", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Siparis", b =>
                {
                    b.Navigation("SiparisKalemleri");
                });

            modelBuilder.Entity("AlasTech.Models.Varliklar.Urun", b =>
                {
                    b.Navigation("Favoriler");

                    b.Navigation("Karsilastirmalar");

                    b.Navigation("Puanlamalar");

                    b.Navigation("SepetKalemleri");

                    b.Navigation("SiparisKalemleri");

                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
